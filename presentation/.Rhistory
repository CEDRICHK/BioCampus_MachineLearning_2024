import matplotlib.pyplot as plt
# Données
x = [1, 2, 3, 4, 5]
y = [2, 4, 6, 8, 10]
# Création de la figure
plt.figure(figsize=(6,4))
# Tracé du graphique
plt.plot(x, y, label='y = 2x')
# Ajout du titre et des labels
plt.title('Graphique Simple avec Matplotlib')
plt.xlabel('Axe X')
plt.ylabel('Axe Y')
# Ajout de la légende
plt.legend()
# Affichage de la figure
plt.show()
options(htmltools.dir.version = FALSE)
theme_custom <- function(base_size = 14) {
theme_bw(base_size = base_size) %+replace%
theme(
# L'ensemble de la figure
plot.title = element_text(size = rel(1), face = "bold", margin = margin(0,0,5,0), hjust = 0),
# Zone où se situe le graphique
panel.grid.minor = element_blank(),
panel.border = element_blank(),
# Les axes
axis.title = element_text(size = rel(0.85), face = "bold"),
axis.text = element_text(size = rel(0.70), face = "bold"),
axis.line = element_line(color = "black", arrow = arrow(length = unit(0.3, "lines"), type = "closed")),
# La légende
legend.title = element_text(size = rel(0.85), face = "bold"),
legend.text = element_text(size = rel(0.70), face = "bold"),
legend.key = element_rect(fill = "transparent", colour = NA),
legend.key.size = unit(1.5, "lines"),
legend.background = element_rect(fill = "transparent", colour = NA),
# Les étiquettes dans le cas d'un facetting
strip.background = element_rect(fill = "#17252D", color = "#17252D"),
strip.text = element_text(size = rel(0.85), face = "bold", color = "white", margin = margin(5,0,5,0))
)
}
library(reticulate)
#py_config()
#virtualenv_create("BC-2023")
use_virtualenv("BC-2023", required = TRUE)
reticulate::repl_python()
library(reticulate)
#py_config()
#virtualenv_create("BC-2023")
use_virtualenv("BC-2023", required = TRUE)
#py_install("matplotlib")
py_install("scipy")
reticulate::repl_python()
library(reticulate)
#py_config()
#virtualenv_create("BC-2023")
use_virtualenv("BC-2023", required = TRUE)
#py_install("matplotlib")
py_install("scipy")
options(htmltools.dir.version = FALSE)
theme_custom <- function(base_size = 14) {
theme_bw(base_size = base_size) %+replace%
theme(
# L'ensemble de la figure
plot.title = element_text(size = rel(1), face = "bold", margin = margin(0,0,5,0), hjust = 0),
# Zone où se situe le graphique
panel.grid.minor = element_blank(),
panel.border = element_blank(),
# Les axes
axis.title = element_text(size = rel(0.85), face = "bold"),
axis.text = element_text(size = rel(0.70), face = "bold"),
axis.line = element_line(color = "black", arrow = arrow(length = unit(0.3, "lines"), type = "closed")),
# La légende
legend.title = element_text(size = rel(0.85), face = "bold"),
legend.text = element_text(size = rel(0.70), face = "bold"),
legend.key = element_rect(fill = "transparent", colour = NA),
legend.key.size = unit(1.5, "lines"),
legend.background = element_rect(fill = "transparent", colour = NA),
# Les étiquettes dans le cas d'un facetting
strip.background = element_rect(fill = "#17252D", color = "#17252D"),
strip.text = element_text(size = rel(0.85), face = "bold", color = "white", margin = margin(5,0,5,0))
)
}
knitr::include_graphics("./figures/soft-margin.png")
knitr::include_graphics("./figures/kernel-1.png")
knitr::include_graphics("./figures/kernel-2.png")
reticulate::repl_python()
options(htmltools.dir.version = FALSE)
theme_custom <- function(base_size = 14) {
theme_bw(base_size = base_size) %+replace%
theme(
# L'ensemble de la figure
plot.title = element_text(size = rel(1), face = "bold", margin = margin(0,0,5,0), hjust = 0),
# Zone où se situe le graphique
panel.grid.minor = element_blank(),
panel.border = element_blank(),
# Les axes
axis.title = element_text(size = rel(0.85), face = "bold"),
axis.text = element_text(size = rel(0.70), face = "bold"),
axis.line = element_line(color = "black", arrow = arrow(length = unit(0.3, "lines"), type = "closed")),
# La légende
legend.title = element_text(size = rel(0.85), face = "bold"),
legend.text = element_text(size = rel(0.70), face = "bold"),
legend.key = element_rect(fill = "transparent", colour = NA),
legend.key.size = unit(1.5, "lines"),
legend.background = element_rect(fill = "transparent", colour = NA),
# Les étiquettes dans le cas d'un facetting
strip.background = element_rect(fill = "#17252D", color = "#17252D"),
strip.text = element_text(size = rel(0.85), face = "bold", color = "white", margin = margin(5,0,5,0))
)
}
reticulate::repl_python()
options(htmltools.dir.version = FALSE)
theme_custom <- function(base_size = 14) {
theme_bw(base_size = base_size) %+replace%
theme(
# L'ensemble de la figure
plot.title = element_text(size = rel(1), face = "bold", margin = margin(0,0,5,0), hjust = 0),
# Zone où se situe le graphique
panel.grid.minor = element_blank(),
panel.border = element_blank(),
# Les axes
axis.title = element_text(size = rel(0.85), face = "bold"),
axis.text = element_text(size = rel(0.70), face = "bold"),
axis.line = element_line(color = "black", arrow = arrow(length = unit(0.3, "lines"), type = "closed")),
# La légende
legend.title = element_text(size = rel(0.85), face = "bold"),
legend.text = element_text(size = rel(0.70), face = "bold"),
legend.key = element_rect(fill = "transparent", colour = NA),
legend.key.size = unit(1.5, "lines"),
legend.background = element_rect(fill = "transparent", colour = NA),
# Les étiquettes dans le cas d'un facetting
strip.background = element_rect(fill = "#17252D", color = "#17252D"),
strip.text = element_text(size = rel(0.85), face = "bold", color = "white", margin = margin(5,0,5,0))
)
}
reticulate::repl_python()
